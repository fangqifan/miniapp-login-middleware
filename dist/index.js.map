{"version":3,"file":"index.js","sources":["../node_modules/just-clone/index.js","../node_modules/just-extend/index.js","../src/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-runtime/regenerator/index.js","../node_modules/miniapp-middleware-contracts/dist/index.js"],"sourcesContent":["module.exports = clone;\n\n/*\n  Deep clones all properties except functions\n\n  var arr = [1, 2, 3];\n  var subObj = {aa: 1};\n  var obj = {a: 3, b: 5, c: arr, d: subObj};\n  var objClone = clone(obj);\n  arr.push(4);\n  subObj.bb = 2;\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4], d: {aa: 1}}\n  objClone; // {a: 3, b: 5, c: [1, 2, 3], d: {aa: 1, bb: 2}}\n*/\n\nfunction clone(obj) {\n  if (typeof obj == 'function') {\n    return obj;\n  }\n  var result = Array.isArray(obj) ? [] : {};\n  for (var key in obj) {\n    // include prototype properties\n    var value = obj[key];\n    var type = {}.toString.call(value).slice(8, -1);\n    if (type == 'Array' || type == 'Object') {\n      result[key] = clone(value);\n    } else if (type == 'Date') {\n      result[key] = new Date(value.getTime());\n    } else if (type == 'RegExp') {\n      result[key] = RegExp(value.source, getRegExpFlags(value));\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\nfunction getRegExpFlags(regExp) {\n  if (typeof regExp.source.flags == 'string') {\n    return regExp.source.flags;\n  } else {\n    var flags = [];\n    regExp.global && flags.push('g');\n    regExp.ignoreCase && flags.push('i');\n    regExp.multiline && flags.push('m');\n    regExp.sticky && flags.push('y');\n    regExp.unicode && flags.push('u');\n    return flags.join('');\n  }\n}\n","module.exports = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (!result || (typeof result != 'object' && typeof result != 'function')) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (extender.hasOwnProperty(key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(true, result[key] || base, value);\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n","import clone from \"just-clone\";\nimport extend from \"just-extend\";\nimport { LoginModule, LoginStatusEnum } from 'miniapp-token-based-login'\nimport { Middleware } from 'request-middleware-pipeline';\nimport Contracts from 'miniapp-middleware-contracts';\n\nconst defaultOptions = {\n    attachRequestOptions: (requstOptions, loginToken) => {\n        if (loginToken) {\n            requstOptions.header = requstOptions.header || {};\n            requstOptions.header['Authorization'] = 'Bearer ' + loginToken;\n        }\n    },\n    maxRetryCount: 3,\n    loginModule: new LoginModule()\n};\n\nconst privateNames = {\n    options: Symbol('options'),\n    retryCount: Symbol('retryCount'),\n};\n\nfunction recoveryContextData(contextData, newData) {\n    let keys = Object.keys(contextData);\n    keys.forEach(key => {\n        delete contextData[key];\n    })\n    extend(true, contextData, newData);\n}\n\nexport default class extends Middleware {\n    constructor(nextMiddleware, options) {\n        super(nextMiddleware);\n\n        this[privateNames.options] = extend({}, defaultOptions, options);\n        this[privateNames.retryCount] = 0;\n    }\n\n    async invoke(middlewareContext) {\n        //缓存context data 用于登录重试\n        let cacheData = clone(middlewareContext.data);\n        // 读取本地login token 附加在request上\n        const requestOptions = middlewareContext.data[Contracts.WxRequestOptions] = middlewareContext.data[Contracts.WxRequestOptions] || {};\n        const loginToken = this[privateNames.options].loginModule.loginToken;\n\n        this[privateNames.options].attachRequestOptions(requestOptions, loginToken);\n\n        await this.next(middlewareContext);\n\n        const response = middlewareContext.data[Contracts.WxResponse] = middlewareContext.data[Contracts.WxResponse] || {};\n        if (response.statusCode === 401) {\n            let currentLoginStatus = this[privateNames.options].loginModule.status;\n            //登陆失败的将不再尝试登陆\n            if (currentLoginStatus.status === LoginStatusEnum.LoggedInFailed) {\n                return;\n            }\n            if (currentLoginStatus.status === LoginStatusEnum.LoggedIn) {\n                currentLoginStatus.changeStatus(LoginStatusEnum.NotLoggedIn);\n            }\n            await this[privateNames.options].loginModule.login();\n            //如果登录成功 则重置context data并重试\n            if (currentLoginStatus.status === LoginStatusEnum.LoggedIn) {\n                if (this[privateNames.retryCount] > this[privateNames.options].maxRetryCount) {\n                    currentLoginStatus.changeStatus(LoginStatusEnum.LoggedInFailed);\n                    return;\n                }\n                this[privateNames.retryCount]++;\n                recoveryContextData(middlewareContext.data, cacheData);\n                await this.invoke(middlewareContext);\n            }\n        }\n    }\n\n    config(options) {\n        this[privateNames.options] = extend(this[privateNames.options], options);\n    }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e[\"miniapp-middleware-contracts\"]=t()}(this,function(){\"use strict\";return{WxRequestOptions:\"wx-request-options\",WxResponse:\"wx-response\"}});\n//# sourceMappingURL=index.js.map\n"],"names":["clone","obj","result","Array","isArray","key","value","type","toString","call","slice","Date","getTime","RegExp","source","getRegExpFlags","regExp","flags","global","push","ignoreCase","multiline","sticky","unicode","join","extend","args","arguments","deep","shift","Error","extenders","len","length","i","extender","hasOwnProperty","isCloneable","base","recoveryContextData","contextData","newData","Object","keys","forEach","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","prototype","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","err","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","method","this","AsyncIterator","invoke","resolve","reject","record","hasOwn","Promise","__await","then","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","done","GenStateSuspendedYield","iterator","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","Op","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","runtime","regeneratorRuntime","module","exports","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","object","reverse","pop","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Function","g","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","require$$0","e","t","WxRequestOptions","WxResponse","defaultOptions","requstOptions","loginToken","header","LoginModule","privateNames","nextMiddleware","options","retryCount","middlewareContext","data","Contracts","loginModule","attachRequestOptions","requestOptions","response","statusCode","status","currentLoginStatus","LoginStatusEnum","LoggedInFailed","LoggedIn","changeStatus","NotLoggedIn","login","maxRetryCount","cacheData","Middleware"],"mappings":"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"}